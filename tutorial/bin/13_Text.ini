; orx - Tutorial config file
; Should be used with orx v.1.4+

[Display]
; In this example, we use the same size for the screen display than our camera's frustum so as to obtain a 1:1 ratio
ScreenWidth   = @Camera.FrustumWidth
ScreenHeight  = @Camera.FrustumHeight
Title         = Text Tutorial

[Physics]
ShowDebug	= true

[Resource]
Texture = ../data/object
Config = .
WatchList = Config

[Input]
SetList = MainInput

[Screenshot]
BaseName = Text-Tutorial-
Extension = png

[MainInput]
KEY_ESCAPE = Quit
KEY_Q = Quit
KEY_F12 = Screenshot
KEY_LEFT = Prev
KEY_DOWN = Prev
KEY_RIGHT = Next
KEY_UP = Next

[Viewport]
Camera            = Camera
;RelativePosition  = bottom right
;Position          = (100, 100, 0); NB: Position is in pixels and will be ignored if RelativePosition is specified
;RelativeSize      = (0.5, 0.5, 0.0)
;Size              = (200, 150, 0) NB: Size is in pixels and will be ignored if RelativeSize is specified
;BackgroundColor   = (255, 180, 0)

[Camera]
FrustumWidth  = 1200
FrustumHeight = 860
FrustumFar    = 1.0
FrustumNear   = 0.0
Position      = (0.0, 0.0, -1.0)
;Zoom          = 3.0
;Rotation      = 45

[CustomFont]
Texture = penguinattack.png
CharacterList = " !""#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~€‚ƒ„…†‡ˆ‰Š‹ŒŽ‘’“”•–—˜™š›œžŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ"
CharacterSize = (19, 24, 0)

[CustomFont2@CustomFont]

[CustomChineseFont]
Texture = customchinesefont.png
CharacterList = "Orx 志是标的这"
CharacterSize = (24, 24, 0)
CharacterSpacing = (2, 2, 0)

[CustomChineseFont2@CustomChineseFont]

; If I remove this line, despite the file being empty, the config hotloading breaks - this seems like a pretty substancial bug.
; This is fixed upstream
@TextObjects.ini@

[TextObject]
PartList = @
Dynamic  = false
Type     = box
Solid    = true
Body     = @
Graphic  = @
Text     = @
String   = @
Position = (0,0,0)
Scale    = (3,3,3)
Pivot    = center

[TextObject0@TextObject]
; NOTE: `scale(n) does not mean `scale(n,n,n) like I always think, which appears to screw up rendering - double check if this is intended behaviour
String   = "`scale(3,1,1)normal `scale(2,2,1)TEXT`!
`!Newline normal"

[FixedWidth_ExplicitLineBreak@TextObject]
Size = (120, 0, 0)
String = "normal `scale(2,2,1)2x a b c d e f g
`scale(3,3,1)3x`! 2x"

[FixedWidth_NoExplicitLineBreak@TextObject]
Size = (120, 0, 0)
String = "normal `scale(2,2,1)2x `scale(3,3,1)3x`! 2x and more"

[FixedWidthHeightTest0@TextObject]
Size = (100, 79, 0)
String = "normal `scale(2,2,1)2x `scale(3,3,1)3`color(0,255,0)x `color(255,0,0)`scale(4,4,1)4x"

[FixedWidthHeightTest1@FixedWidthHeightTest0]
Size = (100, 80, 0)

[FixedWidthHeightTest2@FixedWidthHeightTest0]
Size = (100, 81, 0)

; BUG pivot doesn't work with fixed text size

[TextObject1@TextObject]
Font = CustomFont
String = "`color(0,255,0)this `font(CustomFont)`scale(1,1.5,1)is `color(255,0,0)red`! dawg!
`scale(1,4,1)this is `color(0,0,255)blue`! dawg!"

[TestColorMult@TextObject]
Color    = (255, 100, 0)
String   = "this `color(100, 255, 100)green`! word multiplies with red"

[TestNoMarkers@TextObject]
String   = "no markers"
[TestMarkerAtStart@TextObject]
String   = "`scale(2,2)at start"
[TestMarkerAtEnd@TextObject]
String   = "at end`scale(2,2)"

[TestInvalidValues@TextObject]
String   = "`font(brokenfont)bad font
`color(brokencolor)bad color
`scale(brokenscale)bad scale"

[Start@TextObject]
String = "Press arrow keys to cycle text objects"

; an edge case with no markers
; an edge case with markers at index 0
; there was a display bug when doing invalid vectors for scale such as (1 1, 2) and/or (1, 2 2)
; edge case if multiple newlines appear in a row (what happens with line markers?)

[Label]
Graphic  = @
Text     = @
String   = @
Scale    = (3,3,3)
Pivot    = left
Position = (-580, 400, 0)
String = "NONE"

[Scene]
Position = (0, 0, 0)
TextList = Start #
           TestNoMarkers #
           TextObject0 #
           TestColorMult #
           TextObject1 #
           TestMarkerAtStart #
           TestMarkerAtEnd #
           FixedWidth_ExplicitLineBreak #
           FixedWidth_NoExplicitLineBreak #
           FixedWidthHeightTest0 #
           FixedWidthHeightTest1 #
           FixedWidthHeightTest2 #
           TestInvalidValues #
           Playground

[FixedHeightTruncatesExplicitNewlines@TextObject]
Size = (0, 10, 0)
String = "normal `scale(1,2,1)2x
`scale(1,3,1)3x`! 2x"
; BUG? Apparently you cannot have a fixed height with unfixed width. That seems broken and/or an undesirable limitation
